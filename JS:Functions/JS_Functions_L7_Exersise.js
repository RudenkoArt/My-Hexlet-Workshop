// Внутренняя функция takeLast() возвращает последние n символов строки в обратном порядке.
// Количество символов передаётся в takeLast() вторым параметром.
// Если передаётся пустая строка или строка меньше необходимой длины, функция возвращает null.
const run = (text) => {
  const takeLast = (str, numberOfCharacters) => {
    // определяем внутреннюю 'анонимную' функцию и
    // сохраняем в константе takeLast
    const stringLength = str.length;
    // записываем в stringLength длину передаваемой строки
    const lengthDifference = stringLength - numberOfCharacters;
    // записываем в константу разницу между длинной строки и
    // количеством последних символов которые нужно вернуть
    if (stringLength === 0 || stringLength < numberOfCharacters) {
      return null;
    }
    // выполняем проверку на пустую строку и строку меньше необходимой длины
    // при помощи логического логического оператора OR:(||)
    let result = '';
    // создаём пустую строку которую result будем наполнять при обходе
    // цикла for и возвращать как результат функции
    for (let i = stringLength - 1; i >= lengthDifference; i -= 1) {
      result += str[i];
    }
    // инициализация = индекс последнего символа передаваемой строки
    // условие = (индекс >= разнице длинны строки и количеству возвращаемых символов)
    // финальное выражение = уменьшаем счетчик i на 1 в конце итерации цикла
    // выражение = наполняем переменную result символом с необходимым индексом
    return result;
    // возвращаем результат
  };

  return takeLast(text, 4);
  // вызываем внутреннюю функцию takeLast() и
  // возвращаем результат наружу из run()
};

run(''); // null
run('cb'); // null
run('power'); // rewo
run('hexlet'); // telx
